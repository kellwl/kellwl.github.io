<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>冒泡排序</title>
      <link href="/archives/14e6f1eb.html"/>
      <url>/archives/14e6f1eb.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>冒泡排序（Bubble Sorting）的基本思想是：通过对待排序序列从前向后（从下标较小的元素开始）,依次比较<br>相邻元素的值，若发现逆序则交换，使值较大的元素逐渐从前移向后部，就象水底下的气泡一样逐渐向上冒。</p></blockquote><h2 id="1-冒泡排序过程的例子-图解"><a href="#1-冒泡排序过程的例子-图解" class="headerlink" title="1.冒泡排序过程的例子(图解)"></a>1.冒泡排序过程的例子(图解)</h2><p><img src="https://picture-cloud-lwl.oss-cn-shenzhen.aliyuncs.com/img/%E5%9B%BE%E4%BE%8B.jpg" alt="图例"><br>小结上面的图解过程:</p><ol><li>一共进行 数组的大小-1 次 大的循环</li><li>每一趟排序的次数在逐渐的减少</li><li>如果我们发现在某趟排序中，没有发生一次交换， 可以提前结束冒泡排序。这个就是优化</li></ol><p>代码实现:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 排序算法;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: datastructureAndMethod</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 我们将五个无序的数：3, 9, -1, 10, -2 使用冒泡排序法将其排成一个从小 到大的有序数列。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: lwl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2022-10-12 10:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSort</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     <span class="type">int</span> ary[]=&#123;<span class="number">3</span>, <span class="number">9</span>, -<span class="number">1</span>, <span class="number">10</span>, -<span class="number">2</span>&#125;;</span><br><span class="line">     bubbleSort(ary);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span>    <span class="keyword">void</span>   <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> ary[])</span>&#123;</span><br><span class="line">        <span class="type">int</span> length=ary.length;</span><br><span class="line">        <span class="comment">//外层大循环,需要n-1次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="comment">//比较相邻的元素,如果前面的元素比后面的大就交换位置</span></span><br><span class="line">                <span class="keyword">if</span> (ary[j]&gt;ary[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="comment">//交换位置</span></span><br><span class="line">                    <span class="type">int</span> temp=ary[j];</span><br><span class="line">                    ary[j]=ary[j+<span class="number">1</span>];</span><br><span class="line">                    ary[j+<span class="number">1</span>]=temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;趟排序后的数组&quot;</span>);</span><br><span class="line">            System.out.println(Arrays.toString(ary));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果:<br><img src="https://picture-cloud-lwl.oss-cn-shenzhen.aliyuncs.com/img/image-20221012120350730.png" alt="image-20221012120350730"></p><h3 id="算法改良"><a href="#算法改良" class="headerlink" title="算法改良:"></a>算法改良:</h3><p>如果后面的数字是有序的就不需要再进行比较了,例如数组[3, 9, -1, 10, 20],<br>只需要比较前面3个后面的10,20不需要比较.</p><p>思路:设置一个flag&#x3D;false,若交换过位置则flag&#x3D;true,在内层循环最后判断flag<br>若flag&#x3D;true则说明数组是有序的无需排序,break跳出循环,注意需要重置flag&#x3D;false否则会影响下一层循环</p><p>代码如下:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 排序算法;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: datastructureAndMethod</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 我们将五个无序的数：3, 9, -1, 10, -2 使用冒泡排序法将其排成一个从小 到大的有序数列。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: lwl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2022-10-12 10:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSort</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">     <span class="type">int</span> ary[]=&#123;<span class="number">3</span>, <span class="number">9</span>, -<span class="number">1</span>, <span class="number">10</span>, -<span class="number">2</span>&#125;;</span><br><span class="line">     bubbleSort(ary);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span>    <span class="keyword">void</span>   <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span> ary[])</span>&#123;</span><br><span class="line">        <span class="type">int</span> length=ary.length;</span><br><span class="line">        <span class="type">boolean</span>  flag=<span class="literal">false</span>;<span class="comment">//用来标识是否进行过交换</span></span><br><span class="line">        <span class="comment">//外层大循环,需要n-1次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="comment">//比较相邻的元素,如果前面的元素比后面的大就交换位置</span></span><br><span class="line">                <span class="keyword">if</span> (ary[j]&gt;ary[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">//交换位置</span></span><br><span class="line">                    <span class="type">int</span> temp=ary[j];</span><br><span class="line">                    ary[j]=ary[j+<span class="number">1</span>];</span><br><span class="line">                    ary[j+<span class="number">1</span>]=temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span>+(i+<span class="number">1</span>)+<span class="string">&quot;趟排序后的数组&quot;</span>);</span><br><span class="line">            System.out.println(Arrays.toString(ary));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!flag)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                flag=<span class="literal">false</span>;<span class="comment">//将flag重置为false,因为在第一趟交换过程中可能出现交换,但是后面可能不出现了</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果:<br><img src="https://picture-cloud-lwl.oss-cn-shenzhen.aliyuncs.com/img/image-20221012121802739.png" alt="image-20221012121802739"></p>]]></content>
      
      
      
        <tags>
            
            <tag> -算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/archives/be82d226.html"/>
      <url>/archives/be82d226.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    comsole.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
            <tag> 表格 </tag>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/archives/5c2fafc7.html"/>
      <url>/archives/5c2fafc7.html</url>
      
        <content type="html"><![CDATA[<p>第一篇文章  第一篇文章</p><h2 id="这是一个二级标题"><a href="#这是一个二级标题" class="headerlink" title="这是一个二级标题"></a>这是一个二级标题</h2><p>这里面写一点内容</p><h3 id="这是一个三级标题"><a href="#这是一个三级标题" class="headerlink" title="这是一个三级标题"></a>这是一个三级标题</h3><h2 id="这是第二个章节"><a href="#这是第二个章节" class="headerlink" title="这是第二个章节"></a>这是第二个章节</h2><h2 id="这是第三个章节"><a href="#这是第三个章节" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-1"><a href="#这是第三个章节-1" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-2"><a href="#这是第三个章节-2" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-3"><a href="#这是第三个章节-3" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-4"><a href="#这是第三个章节-4" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-5"><a href="#这是第三个章节-5" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-6"><a href="#这是第三个章节-6" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-7"><a href="#这是第三个章节-7" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-8"><a href="#这是第三个章节-8" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-9"><a href="#这是第三个章节-9" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-10"><a href="#这是第三个章节-10" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-11"><a href="#这是第三个章节-11" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-12"><a href="#这是第三个章节-12" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-13"><a href="#这是第三个章节-13" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-14"><a href="#这是第三个章节-14" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-15"><a href="#这是第三个章节-15" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-16"><a href="#这是第三个章节-16" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-17"><a href="#这是第三个章节-17" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-18"><a href="#这是第三个章节-18" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-19"><a href="#这是第三个章节-19" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-20"><a href="#这是第三个章节-20" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-21"><a href="#这是第三个章节-21" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-22"><a href="#这是第三个章节-22" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-23"><a href="#这是第三个章节-23" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-24"><a href="#这是第三个章节-24" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-25"><a href="#这是第三个章节-25" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-26"><a href="#这是第三个章节-26" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-27"><a href="#这是第三个章节-27" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-28"><a href="#这是第三个章节-28" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-29"><a href="#这是第三个章节-29" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-30"><a href="#这是第三个章节-30" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-31"><a href="#这是第三个章节-31" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-32"><a href="#这是第三个章节-32" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-33"><a href="#这是第三个章节-33" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-34"><a href="#这是第三个章节-34" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-35"><a href="#这是第三个章节-35" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-36"><a href="#这是第三个章节-36" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-37"><a href="#这是第三个章节-37" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-38"><a href="#这是第三个章节-38" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-39"><a href="#这是第三个章节-39" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-40"><a href="#这是第三个章节-40" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-41"><a href="#这是第三个章节-41" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-42"><a href="#这是第三个章节-42" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-43"><a href="#这是第三个章节-43" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-44"><a href="#这是第三个章节-44" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-45"><a href="#这是第三个章节-45" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2><h2 id="这是第三个章节-46"><a href="#这是第三个章节-46" class="headerlink" title="这是第三个章节"></a>这是第三个章节</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
